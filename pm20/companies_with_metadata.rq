# all companies/organizations with metadata
#
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX frapo: <http://purl.org/cerif/frapo/>
PREFIX gndo: <https://d-nb.info/standards/elementset/gnd#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX schema: <http://schema.org/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX zbwext: <http://zbw.eu/namespaces/zbw-extensions/>
#
select distinct ?pm20 ?pm20Label ?fromTo (group_concat(distinct ?location;
    separator='; ') as ?locations) (group_concat(distinct ?countryCode;
    separator='; ') as ?countries) (group_concat(distinct ?industry;
    separator='; ') as ?industries) ?notation ?doc (str(?docCount) as ?docLabel) (group_concat(distinct ?clip;
    separator='; ') as ?clips) ?gnd ?gndLabel ?wd ?wdLabel
where {
  values ( ?language ) {
    ( 'de' )
  }
  ?pm20 a zbwext:CompanyFolder ;
        skos:prefLabel ?pm20Label ;
        dct:identifier ?pm20Id ;
        dc:type ?type .
  filter(isLiteral(?pm20Id))
  #
  optional {
    ?pm20 schema:industry ?industry .
    filter(lang(?industry) = ?language)
  }
  optional {
    ?pm20 skos:notation ?notation .
  }
  # restrict by country notation (see
  # http://zbw.eu/beta/skosmos/pm20ag/en/page/157538)
  ##filter(strstarts(?notation, 'A9') || strstarts(?notation, 'A10')) # Germany
  ##filter(strstarts(?notation, 'A22')) # UK
  ##filter(strstarts(?notation, 'A28')) # France
  #
  optional {
    ?pm20 schema:location ?location .
    filter(lang(?location) = ?language)
  }
  optional {
    ?pm20 frapo:hasCountryCode ?countryCode .
  }
  optional {
    ?pm20 dct:temporal ?clip .
  }
  optional {
    ?pm20 zbwext:totalDocCount ?docCount .
  }
  # only companies with documents
  ##filter(?docCount > 0)
  #
  optional {
    ?pm20 zbwext:fromTo ?fromTo .
  }
  optional {
    ?pm20 gndo:gndIdentifier ?gndId .
    filter(isLiteral(?gndId))
    bind (uri(concat('https://d-nb.info/gnd/', ?gndId)) as ?gnd)
    bind(?gndId as ?gndLabel)
  }
  optional {
    graph <http://zbw.eu/beta/wikidata/ng> {
      optional {
        ?wd wdt:P4293 ?pm20Id .
        bind(strafter(str(?wd), str(wd:)) as ?wdLabel)
      }
    }
  }
  bind(if(bound(?docCount), uri(concat('https://pm20.zbw.eu/dfgview/', $pm20Id)), '') as ?doc)

}
group by ?pm20 ?pm20Label ?fromTo ?doc ?docCount ?notation ?gnd ?gndLabel ?wd ?wdLabel
order by ?pm20Label ?clip

