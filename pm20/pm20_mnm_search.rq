# Create list of search statements in parallel to Wikidata Mix'n'match catalog
# for PM20 companies (excluding entries which are already exactly linked)
#
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX frapo: <http://purl.org/cerif/frapo/>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX pq: <http://www.wikidata.org/prop/qualifier/>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX schema: <http://schema.org/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX zbwext: <http://zbw.eu/namespaces/zbw-extensions/>
#
select ?id ?pm20 (?name as ?pm20Label) ?search ("search" as ?searchLabel) ?description
where {
  {
    select ?pm20 ?id ?name ?docCount ?prefLabel ?fromTo
    (group_concat(distinct ?location; separator = '; ') as ?locations)
    (group_concat(distinct ?industry; separator='; ') as ?industries)
    (group_concat(distinct ?note; separator='; ') as ?notes)
    where {
      values ( ?lang ) {
        ( 'en' )
      }
      # query restricts result to folders with documents
      ?pm20 a zbwext:CompanyFolder ;
        dct:identifier ?id ;
        skos:prefLabel ?prefLabel ;
        zbwext:adjustedLabel ?name ;
        frapo:hasCountryCode ?country ;
        zbwext:totalDocCount ?docCount .
      #
      # this is the filter for defining the separate mnm catalogs (parts)
      filter(?country not in ('NL', 'ID', 'AO'))
      filter(?country in ('GB', 'US', 'CA', 'AU', 'ZA', 'IE', 'MY', 'ZW'))
      #
      optional {
        ?pm20 zbwext:fromTo ?fromTo .
      }
      optional {
        ?pm20 schema:location ?location .
        filter(lang(?location) = ?lang)
      }
      optional {
        ?pm20 schema:industry ?industry .
        filter(lang(?industry) = ?lang)
      }
      optional {
        ?pm20 skos:note ?note .
      }
    }
    group by ?pm20 ?id ?name ?docCount ?prefLabel ?fromTo
  }
  bind(concat('{', str(?docCount), '} ', if(bound(?fromTo), concat(?fromTo, ', '), ''), if(bound(?locations), ?locations, ''),
      ' (', if(bound(?industries), ?industries, ''), '): ', $prefLabel, ' -. ', if(bound(?notes), ?notes, '')) as ?description)

  # create search link
  bind(replace(?name, " ", "+") as ?name_enc)
  bind(uri(concat("https://startpage.com/search?q=", ?name_enc, "+site:wikipedia.org")) as ?search)

  # exclude alreday exactly linked entries
  optional {
    service <https://query.wikidata.org/sparql> {
      ?wd p:P4293 ?statement .
      ?statement ps:P4293 ?id .
      optional {
        ?statement pq:P4390 ?relType .
      }
      # let related matches pass
      filter(!bound(?relType) || ?relType!=wd:Q39894604)
    }
  }
  filter(!bound(?wd))
}
order by desc(?docCount) ?name

