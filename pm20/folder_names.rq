# Folder names for folders connected to WD items
#
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX pq: <http://www.wikidata.org/prop/qualifier/>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX wds: <http://www.wikidata.org/entity/statement/>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX zbwext: <http://zbw.eu/namespaces/zbw-extensions/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
#
select ?qsStatement ?wd (str(?label) as ?wdLabel) ?pm20 (?prefLabel as ?pm20Label) 
where {
  values ( ?pmType ) {
    ( zbwext:SubjectFolder )
  }
  service <http://query.wikidata.org/sparql> {
    #    bind( wd:Q80596 as ?wd)
    ?wd p:P4293 ?statement .
    ?statement ps:P4293 ?pm20Id .
    filter(isLiteral(?pm20Id))
    #
    # skip all items where the folder name already exists
    filter(not exists {
        ?statement (pq:1810) [] .
      })
    ?wd rdfs:label ?label .
    filter(lang(?label) = 'en')
  }
  bind(uri(concat('http://purl.org/pressemappe20/folder/', $pm20Id)) as ?pm20)
  #
  # only folders of a certain type
  ?pm20 a ?pmType ;
        skos:prefLabel ?prefLabel .
  #
  # QS statement (QS does not work for unknown values!)
  bind(concat(strafter(str(?wd), str(wd:)),'|P4293|"', ?pm20Id,
      '"|P1810|"', ?prefLabel, '"') as ?qsStatement)
  #
  # identifier for the claim connecting the item with the property pm20Id
  bind(strafter(str(?statement), str(wds:)) as ?claimGuid)
}

