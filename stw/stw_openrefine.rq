# Create OpenRefine input for STW descriptors
#
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX zbwext: <http://zbw.eu/namespaces/zbw-extensions/>
#
# The empty ?rel column is provided for manual editing in the OpenRefine
# project in order to add a mapping relation type. For ids, plain values and
# links are provided separately.
select (str(?stw) as ?descriptor) ?byGnd ?byLabelsDe ?byLabelsEn ?rel
(concat(if(bound(?notes), concat(?notes, ' '), ''), ?prefSys) as ?notesAndCategories)
(concat('https://d-nb.info/gnd/', ?gndId) as ?gnd) ?gndId ?id
where {
  # root category, used as filter condition for the selection of descriptors in
  # the OR input file
  values ( ?notationStub ) {
    ( 'B.01.01.01' )
  }
  {
    # Only one (arbitrary) gnd id is used here, in order to not split up the
    # record.  The restriction to the first category to which a descriptor is
    # assigned (?firstSys) is convenient for division of labor (to produce
    # disjunct batches of descriptors)
    select distinct ?id ?prefLabelDe
    (concat(?prefLabelDe, if(bound(?altLabelsDe), concat(' | ', ?altLabelsDe), '')) as ?byLabelsDe)
    (concat(?prefLabelEn, if(bound(?altLabelsEn), concat(' | ', ?altLabelsEn), '')) as ?byLabelsEn)
    ?notes (max(?gndIdentifier) as ?gndId)
    (concat('[', group_concat(distinct str(?prefSysLang);
          separator = '; '), ']') as ?prefSys)
    (min(str(?prefSysLang)) as ?firstSys)
    ?stw
    where {
      ?stw a zbwext:Descriptor ;
           skos:broader ?thsys ;
           skos:prefLabel ?prefLangDe ;
           skos:prefLabel ?prefLangEn .
      ?thsys a zbwext:Thsys ;
             skos:notation ?nta ;
             skos:prefLabel ?prefSysLang .
      filter(lang(?prefLangDe) = 'de')
      filter(lang(?prefLangEn) = 'en')
      bind(str(?prefLangDe) as ?prefLabelDe)
      bind(str(?prefLangEn) as ?prefLabelEn)
      filter(lang(?prefSysLang) = 'de')
      #
      # build notes
      optional {
        select ?stw ( group_concat(str(?label);
            separator = ' | ') as ?notes)
        where {
          {
            ?stw skos:scopeNote ?label
          } union {
            ?stw skos:historyNote ?label
          } union {
            ?stw skos:editorialNote ?label
          }
          filter(lang(?label) = 'de')
        }
        group by ?stw
      }
      # build altLabels
      optional {
        select ?stw ( group_concat(str(?label);
            separator = ' | ') as ?altLabelsDe)
        where {
          ?stw skos:altLabel ?label
          filter(lang(?label) = 'de')
        }
        group by ?stw
      }
      optional {
        select ?stw ( group_concat(str(?label);
            separator = ' | ') as ?altLabelsEn)
        where {
          ?stw skos:altLabel ?label
          filter(lang(?label) = 'en')
        }
        group by ?stw
      }
      # gnd
      optional {
        ?stw skos:exactMatch ?gnd .
        filter(contains(str(?gnd), '/gnd/'))
        bind(strafter(str(?gnd), 'https://d-nb.info/gnd/') as ?gndIdentifier)
      }
      bind(strafter(str(?stw), 'http://zbw.eu/stw/descriptor/') as ?id)
    }
    group by ?id ?stw ?prefLabelDe ?prefLabelEn ?altLabelsDe ?altLabelsEn ?notes
  }
  bind(if(bound(?gndId), concat('gnd', ?gndId), '') as ?byGnd)
  #
  # filter condition according to notation
  filter(strstarts(?firstSys, ?notationStub))
  #
  # exclude descriptors already mapped to Wikidata
  filter( not exists {
      service <https://query.wikidata.org/sparql> {
        ?wd wdt:P3911 ?id .
      }
    })
}
order by ?firstSys ?byLabelsDe

