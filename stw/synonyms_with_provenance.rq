# Synonyms of a search term, with provenance information
#
# For detailed information on concept level, comment out GROUP BY and
# use alternate SELECT statement
#
PREFIX skos:    <http://www.w3.org/2004/02/skos/core#>
PREFIX gnd:     <http://d-nb.info/standards/elementset/gnd#>
PREFIX rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs:    <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX zbwext:  <http://zbw.eu/namespaces/zbw-extensions/>
PREFIX text:    <http://jena.apache.org/text#>
#
SELECT DISTINCT ?synonym (group_concat(distinct ?prov; separator = ' | ') as ?datasets)
#SELECT DISTINCT ?synonym ?prov ?concept
WHERE {
  # also: 'unemployment', 'skills', 'waste management'
  VALUES ?textQuery {
    'investment policy'
  }
  # find all concepts matching the query text and
  # restrict to exact matching terms
  (?foundConcept ?score ?term) text:query (?textQuery) .
  filter(lcase(str(?term)) = lcase(?textQuery))
  #
  # get the related STW concept
  {
    ?foundConcept a zbwext:Descriptor .
    bind(?foundConcept as ?stwConcept)
  } UNION {
    ?foundConcept skos:exactMatch ?stwConcept .
    ?stwConcept a zbwext:Descriptor .
  }
  # get all concepts in an exactMatch cluster
  {
    ?stwConcept a zbwext:Descriptor .
    bind(?stwConcept as ?concept)
    bind('stw' as ?prov)
  } UNION {
    ?stwConcept skos:exactMatch ?matchingConcept .
    ?matchingConcept dcterms:isPartOf ?target
    bind(?matchingConcept as ?concept)
    bind(strbefore(strafter(str(?target), 'mapping/'), '/target') as ?prov)
  }
  # get all skos labels for all concepts in the cluster
  ?concept skos:prefLabel|skos:altLabel|skos:hiddenLabel ?label
  bind(lcase(str(?label)) AS ?synonym)
}
GROUP BY ?synonym

